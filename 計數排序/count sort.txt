計數排序(數組):
    // 找到範圍
    minVal = 數組中的最小值
    maxVal = 數組中的最大值
    
    // 創建計數數組
    範圍 = maxVal - minVal + 1
    count = 大小為範圍的新數組，初始化為零
    
    // 計算出現次數
    對於 i 從 0 到 數組長度 - 1：
        count[數組[i] - minVal] += 1
        
    // 修改計數數組
    對於 i 從 1 到 範圍 - 1：
        count[i] += count[i - 1]
    
    // 構建排序後的數組
    sorted = 大小與數組相同的新數組
    對於 i 從 數組長度 - 1 到 0：
        sorted[count[數組[i] - minVal] - 1] = 數組[i]
        count[數組[i] - minVal] -= 1
    
    // 複製回原始數組
    對於 i 從 0 到 數組長度 - 1：
        數組[i] = sorted[i]


計數排序是一種整數排序算法，具有線性時間複雜度。它的運作方式是計算輸入數組中每個唯一元素的出現次數，然後使用這些計數將元素排列有序。以下是該算法的步驟說明：

1. 找到範圍：確定輸入值的範圍，即輸入數組中的最小值和最大值。

2. 創建計數數組：創建一個輔助數組 count[]，其大小等於輸入值範圍加一。將此數組的所有元素初始化為零。

3. 計算出現次數：遍歷輸入數組，對於每個元素，將 count[] 數組中相應的索引增加一。例如，如果值 x 在輸入數組中出現了 count[x] 次。

4. 修改計數數組：更新 count[] 數組，使每個元素表示小於或等於其索引的元素數量。這是通過對 count[] 數組的元素進行累加來完成的。

5. 構建排序後的數組：創建一個新的輸出數組 sorted[]，大小與輸入數組相同。從右到左遍歷輸入數組，對於每個元素 arr[i]，將其放置在 sorted[] 數組中的索引 count[arr[i]] - 1，並減少 count[arr[i]] 的值。

6. 複製回原始數組：最後，將 sorted[] 數組的元素複製回原始數組。

計數排序在輸入值的範圍不遠大於數組元素數量時效率高。通常用作其他排序算法的子程序或當輸入數組包含在一個較小範圍內的整數時使用。